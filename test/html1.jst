/*
 * Crosscheck Browserless Javascript Testing Framework.
 *
 * Copyright 2006/2007 The Frontside Software, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * If you have any questions, please contact The Frontside Software, Inc
 * crosscheck@thefrontside.net
 * http://thefrontside.net
 */

crosscheck.suite("HTML Level 1", {
	setup: function() {
		//noinspection JSUndeclaredVariable
		document = new crosscheck.html1.HTMLDocument()
	},

	test_setting_innerHTML_element: function() {
		var div = document.createElement('DIV');

		div.innerHTML = '<span> sub-text</span>';
		assertEquals(1, div.childNodes.length);
		var span = div.childNodes[0];
		assertEquals(crosscheck.dom.ELEMENT_NODE, span.nodeType);
		assertEquals('SPAN', span.nodeName);
		assertEquals(1, span.childNodes.length)
		assertEquals(' sub-text', span.childNodes[0].data)
		assertEquals('<span> sub-text</span>', div.innerHTML)
		assertEquals(' sub-text', span.innerHTML)
	},

	test_setting_and_getting_innerHTML_with_attributes: function() {
		var div = document.createElement('div')
		div.innerHTML = '<div class="outer"><span id="one"> 1 </span> <span id="two"> 2 </span></div>'
		assertEquals('<div class="outer"><span id="one"> 1 </span> <span id="two"> 2 </span></div>', div.innerHTML)
	},

	test_setting_innerHTML_text: function() {
		var div = document.createElement('DIV');

		div.innerHTML = 'text';
		assertEquals(1, div.childNodes.length);
		assertEquals(crosscheck.dom.TEXT_NODE, div.childNodes[0].nodeType);
		assertEquals('text', div.childNodes[0].data);
	},

	test_append_to_innerHTML: function() {
		var div = document.createElement('DIV');
		div.innerHTML = 'text';
		div.innerHTML += '<span>sub-text</span>';

		assertEquals(2, div.childNodes.length);

		assertEquals(crosscheck.dom.TEXT_NODE, div.childNodes[0].nodeType);
		assertEquals('text', div.childNodes[0].data);

		assertEquals(crosscheck.dom.ELEMENT_NODE, div.childNodes[1].nodeType);
		assertEquals('SPAN', div.childNodes[1].nodeName);
		assertEquals('sub-text', div.childNodes[1].innerHTML);
	}
//
//	test_get_innerHTML: function() {
//		var div = document.createElement('DIV');
//		var span = div.appendChild(document.createElement('SPAN'));
//		span.id = "sparkly";
//		span.setAttribute('sparkle', 'true');
//		var comment = div.appendChild(document.createComment('nice tan'));
//		var text = div.appendChild(document.createTextNode('lorem ipsum'));
//		var ul = div.appendChild(document.createElement('UL'));
//		ul.appendChild(document.createElement('LI'));
//		ul.appendChild(document.createElement('LI'));
//
//		assertEquals(
//				'<span id="sparkly" sparkle="true"/>' +
//				'<!--nice tan-->' +
//				'lorem ipsum' +
//				'<ul>' +
//				'<li/>' +
//				'<li/>' +
//				'</ul>', div.innerHTML);
//	},

})