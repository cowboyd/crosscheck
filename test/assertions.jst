
crosscheck.suite("Core Assertions", {

	test_assertTrue: function() {
		assertTrue(true);
		var errorThrown = false;
		try {
			assertTrue(false);
		} catch(error) {
			errorThrown = true;
		}
		if (!errorThrown) {
			throw new crosscheck.AssertionFailure('assertTrue(false) did not throw an error.');
		}
	},
	test_assertFalse: function() {
		assertFalse(false);
		var errorThrown = false;
		try {
			assertFalse(true);
		} catch(error) {
			errorThrown = true;
		}
		if (!errorThrown) {
			throw new crosscheck.AssertionFailure('assertFalse(true) did not throw an error.');
		}
	},
	test_fail: function() {
		try {
			fail('error!')
		} catch(error) {
			assertTrue(error.assertionFailure);
		}
	},
	test_assertNull: function() {
	   assertNull(null);
		try {
         assertNull('hello');
         fail('assertNull(\'hello\') should have thrown an error');
		} catch(error) {
			assertEquals('<hello> expected to be null', error.message);
		}
	},
	test_assertNotNull: function() {
	   assertNotNull('hello');
		try {
         assertNotNull(null);
         fail('assertNotNull(null) should have thrown an error');
		} catch(error) {
			//expected
		}
	},
	test_assertEquals: function() {
		assertEquals('four', 'fourteen'.substring(0, 4));
		try {
			assertEquals('four', 'fourteen');
			fail('assertEquals should have thrown an error');
		} catch(error) {
			assertEquals('better fix it: ' +
				'objects not equal, expected <four>, got <fourteen>', error.message);
		}
	},
	test_assertNotEquals: function() {
		assertNotEquals('four', 'fourteen');
		try {
   		assertNotEquals('four', 'fourteen'.substring(0, 4));
			fail('assertNotEquals should have thrown an error');
		} catch(error) {
			assertEquals('better fix it: ' +
				'objects are equal, expected difference <four>, got <four>', error.message);
		}
	},
	test_AssertionFailure: function() {
		var failure = new crosscheck.AssertionFailure('message');
		assertTrue(failure.assertionFailure);
		assertEquals('message', failure.message);
		assertEquals(failure.message, failure.toString());
	},
	test_assertError: function() {
		assertError(function() { throw new Error('error message'); }, 'error message');
		try {
			assertError(function() { /*no error!*/ }, 'error message');
			fail('Should have thrown an error.');
		} catch(error) {
			assertEquals('should have thrown an error', error.message);
		}
		try {
			assertError(function() { throw new Error('WRONG'); }, 'error message');
			fail('Should have thrown an error.');
		} catch(error) {
			assertEquals('better fix it:' +
				' objects not equal, expected <error message>, got <WRONG>', error.message);
		}
	}
})
